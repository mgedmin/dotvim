snippet travis "travis.yml based on pytest" !b
language: python
python:
	- 2.7
	- 3.5
	- 3.6
	- 3.7
	- 3.8
	- pypy
	- pypy3
install:
	- pip install pytest
script:
	- pytest
notifications:
	email: false
cache: pip
endsnippet

snippet tox-travis "travis.yml based on tox-travis" !b
language: python
python:
`tox -l|sed -e 's/py\([0-9]\)\([0-9]\+\)/\1.\2/' -e 's/^/    - /'`
install:
	- pip install tox-travis
script:
	- tox
notifications:
	email: false
cache: pip
endsnippet

snippet notifications ".travis.yml notifications" b
notifications:
	irc:
		channels:
			- "chat.freenode.net##mgedmin"
		on_success: change
		on_failure: always
		template:
			# ping my nick so I get a pushbullet notification on my phone
			- "mgedmin: %{repository_name} (%{branch}) build %{result}: %{build_url}"

endsnippet

snippet apt "apt: packages in .travis.yml" b
addons:
	apt:
		packages:
			- $0
endsnippet

snippet ansible "ansible playbook" !b
---
- hosts: ${1:localhost}
  gather_facts: no
  tasks:
    - $0
endsnippet

# NB: UltiSnips interprets \-escapes!
snippet appveyor "appveyor.yml based on tox" !b
version: build-{build}-{branch}

environment:
  matrix:
    # https://www.appveyor.com/docs/installed-software#python lists available
    # versions
    - PYTHON: "C:\\\\Python27"
    - PYTHON: "C:\\\\Python35"
    - PYTHON: "C:\\\\Python36"
    - PYTHON: "C:\\\\Python37"
    - PYTHON: "C:\\\\Python38"

init:
  - "echo %PYTHON%"

install:
  - ps: |
      if (-not (Test-Path $env:PYTHON)) {
        curl -o install_python.ps1 https://raw.githubusercontent.com/matthew-brett/multibuild/11a389d78892cf90addac8f69433d5e22bfa422a/install_python.ps1
        .\install_python.ps1
      }
  - ps: if (-not (Test-Path $env:PYTHON)) { throw "No $env:PYTHON" }
  - "set PATH=%PYTHON%;%PYTHON%\\\\Scripts;%PATH%"
  - python --version
  - pip install -U virtualenv  # upgrade pip in tox's virtualenvs
  - pip install tox

build: off

test_script:
  - tox -e py
endsnippet


snippet gha "GitHub Actions workflow" b
# NB: this name is used in the status badge
name: build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
  schedule:
    - cron: "0 5 * * 6"  # 5:00 UTC every Saturday

jobs:
  build:
    name: Python \${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version:
          - "2.7"
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "pypy2"
          - "pypy3"

    steps:
      - name: Git clone
        uses: actions/checkout@v2

      - name: Set up Python \${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: "\${{ matrix.python-version }}"

      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: \${{ runner.os }}-pip-\${{ matrix.python-version }}-\${{ hashFiles('tox.ini', 'setup.py') }}
          restore-keys: |
            \${{ runner.os }}-pip-\${{ matrix.python-version }}-
            \${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U setuptools wheel
          python -m pip install -U tox tox-gh-actions
          python -m pip install -U coveralls

      - name: Run tests
        run: tox

      - name: Check test coverage
        run: coverage report -m --fail-under=100

      - name: Report to coveralls
        run: coveralls
        if: "matrix.python-version != '2.7' && matrix.python-version != 'pypy2'"
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
##        COVERALLS_FLAG_NAME: \${{ matrix.python-version }}
          COVERALLS_PARALLEL: true

  finish:
    name: Tell Coveralls that we're finished running all parallel jobs
    needs: build
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - run: pip3 install -U coveralls
      - run: coveralls --finish
        env:
          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}
endsnippet

context "re.match('(.*/)?[.]github/workflows/.*[.]yml]$', snip.buffer.name)"
snippet lint "lint job for GitHub Actions" bms
lint:
  name: \${{ matrix.toxenv }}
  runs-on: ubuntu-latest

  strategy:
    matrix:
      toxenv:
        - flake8
        - mypy
        - isort
        - check-manifest
        - check-python-versions

  steps:
    - name: Git clone
      uses: actions/checkout@v2

    - name: Set up Python \${{ env.default_python || '3.9' }}
      uses: actions/setup-python@v2
      with:
        python-version: "\${{ env.default_python || '3.9' }}"

    - name: Pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: \${{ runner.os }}-pip-\${{ matrix.toxenv }}-\${{ hashFiles('tox.ini') }}
        restore-keys: |
          \${{ runner.os }}-pip-\${{ matrix.toxenv }}-
          \${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        python -m pip install -U setuptools wheel
        python -m pip install -U tox

    - name: Run \${{ matrix.toxenv }}
      run: python -m tox -e \${{ matrix.toxenv }}
endsnippet
