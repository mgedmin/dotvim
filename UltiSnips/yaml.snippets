snippet ansible "ansible playbook" !b
---
- hosts: ${1:localhost}
  gather_facts: no
  tasks:
    - $0
endsnippet

# NB: UltiSnips interprets \-escapes!
snippet appveyor "appveyor.yml based on tox" !b
version: build-{build}-{branch}

# https://www.appveyor.com/docs/lang/python/
image:
  - Visual Studio 2019

environment:
  matrix:
    # https://www.appveyor.com/docs/windows-images-software/#python lists
    # available versions
    - PYTHON: "C:\\Python37-x64"
    - PYTHON: "C:\\Python38-x64"
    - PYTHON: "C:\\Python39-x64"
    - PYTHON: "C:\\Python310-x64"
    - PYTHON: "C:\\Python311-x64"

init:
  - "echo %PYTHON%"

install:
  - ps: |
      if (-not (Test-Path $env:PYTHON)) {
        curl -o install_python.ps1 https://raw.githubusercontent.com/matthew-brett/multibuild/11a389d78892cf90addac8f69433d5e22bfa422a/install_python.ps1
        .\install_python.ps1
      }
  - ps: if (-not (Test-Path $env:PYTHON)) { throw "No $env:PYTHON" }
  - "set PATH=%PYTHON%;%PYTHON%\\\\Scripts;%PATH%"
  - python --version
  - pip install -U virtualenv  # upgrade pip in tox's virtualenvs
  - pip install tox

build: off

test_script:
  - tox -e py
endsnippet


snippet gha "GitHub Actions workflow" b
# NB: this name is used in the status badge
name: build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
  schedule:
    - cron: "0 5 * * 6"  # 5:00 UTC every Saturday

jobs:
  build:
    name: Python \${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "pypy3.7"

    steps:
      - name: Git clone
        uses: actions/checkout@v4

      - name: Set up Python \${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: "\${{ matrix.python-version }}"

      - name: Pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: \${{ runner.os }}-pip-\${{ matrix.python-version }}-\${{ hashFiles('tox.ini', 'setup.py') }}
          restore-keys: |
            \${{ runner.os }}-pip-\${{ matrix.python-version }}-
            \${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U setuptools wheel
          python -m pip install -U tox tox-gh-actions

      - name: Run tests
        run: tox

      - name: Check test coverage
        run: |
          coverage report -m --fail-under=100
          coverage xml

      - name: Report to coveralls
        uses: coverallsapp/github-action@v2
        with:
          file: coverage.xml
endsnippet

snippet coveralls "coveralls action for GHA" b
      - name: Report to coveralls
        uses: coverallsapp/github-action@v2
        with:
          file: coverage.xml
endsnippet

context "re.match('(.*/)?[.]github/workflows/.*[.]yml]$', snip.buffer.name)"
snippet lint "lint job for GitHub Actions" bms
lint:
  name: \${{ matrix.toxenv }}
  runs-on: ubuntu-latest

  strategy:
    matrix:
      toxenv:
        - flake8
        - mypy
        - isort
        - check-manifest
        - check-python-versions

  steps:
    - name: Git clone
      uses: actions/checkout@v4

    - name: Set up Python \${{ env.default_python || '3.9' }}
      uses: actions/setup-python@v4
      with:
        python-version: "\${{ env.default_python || '3.9' }}"

    - name: Pip cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: \${{ runner.os }}-pip-\${{ matrix.toxenv }}-\${{ hashFiles('tox.ini') }}
        restore-keys: |
          \${{ runner.os }}-pip-\${{ matrix.toxenv }}-
          \${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        python -m pip install -U setuptools wheel
        python -m pip install -U tox

    - name: Run \${{ matrix.toxenv }}
      run: python -m tox -e \${{ matrix.toxenv }}
endsnippet
